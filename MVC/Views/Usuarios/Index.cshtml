@model IEnumerable<MVC.Models.Usuario>

@{
    ViewBag.Title = "Usuarios";
}

<h2 class="text-center">Usuarios</h2>
<div>
    <p class="btn btn-default navbar-left">
        @Html.ActionLink("Crear", "Create")
    </p>
</div>
<div>
    <form class="navbar-form navbar-left" role="search">
        <input type="text" id="myInput" class="form-control" onkeyup="BuscarNombre()" placeholder="Buscar usuario...">
    </form>
</div>
<div>
    <form class="navbar-form navbar-left" role="search">
        <select id="myInputTU" class="form-control" onchange="BuscarTipoUsuario()" placeholder="Buscar tipo de usuario...">
            <option value="">Seleccione tipo de usuario</option>
            <option value="Analista">Analista</option>
            <option value="Supervisor">Supervisor</option>
            <option value="Team Leader">Team Leader</option>
            <option value="Manager">Manager</option>
            <option value="">Todos</option>
        </select>
    </form>
</div>
@*<div>
    <form class="navbar-form navbar-left" role="search">
        <input type="text" id="myInputTU" class="form-control" onkeyup="BuscarTipoUsuario()" placeholder="Buscar tipo de usuario...">
    </form>
</div>*@
<div>
    <form class="navbar-form navbar-left" role="search">
        <input type="text" id="myInputMail" class="form-control" onkeyup="BuscarMail()" placeholder="Buscar mail...">
    </form>
</div>

@if(Model.Count() > 0) { 
<table class="table table-responsive table-striped table-hover" id="myTable">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.NombreUsuario)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TipoUsuario)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Mail)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    ViewBag.mostrar = "False";
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.NombreUsuario)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TipoUsuario)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Mail)
    </td>

    @if (item.TipoUsuario.Equals(MVC.Models.TipoUsuario.Analista))
    {
        ViewBag.mostrar = "True";
    }
    @if (Session["tipoUsuarioLogueado"].ToString().Equals("Manager"))
    {
        ViewBag.mostrar = "True";
    }
    @if (Session["tipoUsuarioLogueado"].ToString().Equals("TeamLeader") && !item.TipoUsuario.Equals(MVC.Models.TipoUsuario.Manager))
    {
        ViewBag.mostrar = "True";
    }
    @if (Session["tipoUsuarioLogueado"].ToString().Equals("Supervisor") && !item.TipoUsuario.Equals(MVC.Models.TipoUsuario.Manager) && !item.TipoUsuario.Equals(MVC.Models.TipoUsuario.TeamLeader))
    {
        ViewBag.mostrar = "True";
    }
    @if (ViewBag.mostrar == "True")
    {
        if (item.TipoUsuario.Equals(MVC.Models.TipoUsuario.Analista))
        {
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.IdUsuario }) |
                @Html.ActionLink("Eliminar", "Delete", new { id = item.IdUsuario }) |
                @Html.ActionLink("Indisponibilidades", "VerIndisponibilidades", new { id = item.IdUsuario })
            </td>
        }else
        {
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.IdUsuario }) |
                @Html.ActionLink("Eliminar", "Delete", new { id = item.IdUsuario })
            </td>
        }
    }
    else
    {
        <td></td>
    }

</tr>
}

</table>
}

<script>
    function BuscarNombre() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function BuscarTipoUsuario() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInputTU");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
     function BuscarMail() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInputMail");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>